version: "3.9"
services:
  web:
    image: yieldguru-frontend
    container_name: yg.frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:5173"
    volumes:
      - './frontend:/app'
    networks:
      - yg

  # web-admin:
  #   image: yieldguru-admin-frontend
  #   container_name: yg.admin-frontend
  #   build:
  #     context: ./admin-frontend
  #     dockerfile: Dockerfile.dev
  #   ports:
  #     - "8081:5173"
  #   volumes:
  #     - './admin-frontend:/app'
  #   networks:
  #     - yg



  # yg.api:
  #   build:
  #     context: './backend/vendor/laravel/sail/runtimes/8.3'
  #     dockerfile: Dockerfile
  #     args:
  #         WWWGROUP: '${WWWGROUP}'
  #   image: 'sail-8.3/app'
  #   container_name: yg.api
  #   extra_hosts:
  #     - 'host.docker.internal:host-gateway'
  #   ports:
  #     - '${APP_PORT:-80}:80'
  #     - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
  #   environment:
  #     WWWUSER: '${WWWUSER}'
  #     LARAVEL_SAIL: 1
  #     XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
  #     XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
  #     IGNITION_LOCAL_SITES_PATH: '${PWD}'
  #   volumes:
  #     - './backend:/var/www/html'
  #   networks:
  #     - yg
  #   depends_on:
  #     - db
  #     - meilisearch
  #     - redis

  db:
    image: 'postgres:15'
    container_name: yg.db
    ports:
      - '${FORWARD_DB_PORT:-5432}:5432'
    environment:
      PGPASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - 'yg-pgsql:/var/lib/postgresql/data'
      - './backend/vendor/laravel/sail/database/pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
    networks:
      - yg
    healthcheck:
      test:
        - CMD
        - pg_isready
        - '-q'
        - '-d'
        - '${DB_DATABASE}'
        - '-U'
        - '${DB_USERNAME}'
      retries: 3
      timeout: 5s

  meilisearch:
    image: 'getmeili/meilisearch:latest'
    container_name: yg.meilisearch
    ports:
      - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
    environment:
      MEILI_NO_ANALYTICS: '${MEILISEARCH_NO_ANALYTICS:-false}'
    volumes:
      - 'yg-meilisearch:/meili_data'
    networks:
      - yg
    healthcheck:
      test:
        - CMD
        - wget
        - '--no-verbose'
        - '--spider'
        - 'http://127.0.0.1:7700/health'
      retries: 3
      timeout: 5s

  redis:
    image: 'redis:alpine'
    container_name: yg.redis
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - 'yg-redis:/data'
    networks:
      - yg
    healthcheck:
      test:
          - CMD
          - redis-cli
          - ping
      retries: 3
      timeout: 5s

networks:
  yg:
    driver: bridge
volumes:
  yg-pgsql:
    driver: local
  yg-meilisearch:
    driver: local
  yg-redis:
    driver: local